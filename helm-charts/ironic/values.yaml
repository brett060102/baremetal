# Default values for ironic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/metal3-io/ironic
  pullPolicy: Always
  tag: capm3-v1.1.2
#image:
#  repository: nginx
#  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  #  tag: ""

#imagePullSecrets: []
#nameOverride: ""
#fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

#securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  - type: httpd 
    port: 6180
  - type: api
    port: 6385
  - type: inspector
    port: 5050  
  - type: NodePort 

ingress:
  enabled: true 
  className: ""
  annotations: 
    cert-manager.io/issuer: ironic-letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api.ironic.suse.baremetal 
      paths:
        - path: /
          pathType: Prefix 
          portname: api
    - host: inspector.ironic.suse.baremetal
      paths:
        - path: /
          pathType: Prefix
          portname: inspector
    - host: boot.ironic.suse.baremetal
      paths:
        - path: /
          pathType: Prefix
          portname: httpd
    - host: cache.ironic.suse.baremetal
      paths:
        - path: /
          pathType: Prefix
          portname: httpd
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

volumeMounts:
  - mountPath: /shared
    name: ironic-data-volume
  - mountPath: /bin/configure-coreos-ipa
    name: ironic
    subPath: configure-coreos-ipa
  - mountPath: /bin/configure-httpd-ipa.sh
    name: ironic
    subPath: configure-httpd-ipa.sh
  - mountPath: /bin/configure-ironic.sh
    name: ironic
    subPath: configure-ironic.sh  
  - mountPath: /bin/coreos-ipa-common.sh
    name: ironic
    subPath: coreos-ipa-common.sh
  - mountPath: /bin/ironic-common.sh
    name: ironic
    subPath: ironic-common.sh
  - mountPath: /bin/rundnsmasq
    name: ironic
    subPath: rundnsmasq
  - mountPath: /bin/runhttpd
    name: ironic
    subPath: runhttpd
  - mountPath: /bin/runironic
    name: ironic
    subPath: runironic
  - mountPath: /bin/runironic-api
    name: ironic
    subPath: runironic-api
  - mountPath: /bin/runironic-conductor
    name: ironic
    subPath: runironic-conductor
  - mountPath: /bin/runironic-exporter
    name: ironic
    subPath: runironic-exporter
  - mountPath: /bin/runironic-inspector
    name: ironic
    subPath: runironic-inspector
  - mountPath: /bin/runlogwatch.sh
    name: ironic
    subPath: runlogwatch.sh
  - mountPath: /bin/tls-common.sh
    name: ironic
    subPath: tls-common.sh
  - mountPath: /etc/dnsmasq.conf.j2
    name: ironic
    subPath: dnsmasq.conf.j2
  - mountPath: /etc/httpd-ironic-api.conf.j2
    name: ironic
    subPath: httpd-ironic-api.conf.j2
  - mountPath: /etc/httpd-vmedia.conf.j2
    name: ironic
    subPath: httpd-vmedia.conf.j2
  - mountPath: /etc/httpd/conf.d/inspector-apache.conf.j2
    name: ironic
    subPath: inspector-apache.conf.j2
  - mountPath: /etc/ironic-inspector/ironic-inspector.conf.j2
    name: ironic
    subPath: ironic-inspector.conf.j2
  - mountPath: /etc/ironic/ironic.conf.j2
    name: ironic
    subPath: ironic.conf.j2
  - mountPath: /tmp/inspector.ipxe.j2
    name: ironic
    subPath: inspector.ipxe.j2
  - mountPath: /tmp/ironic-python-agent.ign.j2
    name: ironic
    subPath: ironic-python-agent.ign.j2
  - mountPath: /usr/local/bin/mkisofs
    name: ironic
    subPath: mkisofs
  - mountPath: /usr/local/bin/get-resource.sh
    name: ironic-ipa-downloader
    subPath: get-resource.sh    

volumes:
  - name: ironic-data-volume    
    configMapName: ""
  - name: ironic  
    configMapName: bin
  - name: ironic-ipa-downloader  
    configMapName: ipa-downloader

baremetaloperator:
  cacheUrl: "http://cache.ironic.suse.baremetal/images"      
  deployKernelUrl: "http://boot.ironic.suse.baremetal/images/ironic-python-agent.kernel"
  deployRamdiskUrl: "http://boot.ironic.suse.baremetal/images/ironic-python-agent.initramfs"
  dhcpRange: "192.168.20.20,192.168.20.80"

  bootServerAddress: "boot.ironic.suse.baremetal"
  dnsmasqDefaultRouter: "192.168.21.254"
  dnsmasqDnsServerAddress: "192.168.20.5"
  httpPort: "6180"

  ipaBaseUri: "http://10.84.144.252/metal3"
  ironicApiUrl: "http://api.ironic.suse.baremetal"
  ironicApiHost: "api.ironic.suse.baremetal"
  ironicBootBaseUrl: "http://boot.ironic.suse.baremetal"
  ironicEndpoint: "http://api.ironic.suse.baremetal/v1/"
  ironicInspectorUrl: "http://inspector.ironic.suse.baremetal" 
  ironicInspectorEndpoint: "http://inspector.ironic.suse.baremetal/v1/"
  ironicInspectorHost: "inspector.ironic.suse.baremetal" 
  ironicRamdiskSshKey: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHGYaMrmsmLbv3O6Fj+0kg/U8iY7pcbO9HkbN88OAD+5 colstrom@headnode"

  provisioningInterface: "ens4"
  provisioningIp: "192.168.20.5"
  mariadbPassword: "changeme"   
  cloudflareApiToken: "foo"
  ironichostNetwork: true

acme:
  privateKeySecretRef:
    name: letsencrypt-private-key
    server: https://acme-v02.api.letsencrypt.org/directory

ironic:
  - servname: ironic-dnsmasq
    command: /bin/rundnsmasq
    type: containers
    envFrom:
      - configMapRefname: bmo
    image:
      repository: quay.io/metal3-io/ironic
      pullPolicy: Always
      tag: ""    
    execCommand:
      - sh
      - -c
      - ss -lun | grep :67 && ss -lun | grep :69
    ports:
      - containerPort: 67
        name: dhcp
        protocol: UDP
      - containerPort: 69
        name: tftp
        protocol: UDP  
    securityContext:
      capabilities:
        add:
          - NET_ADMIN
          - NET_RAW    
  - servname: mariadb
    env:
      - name: MARIADB_PASSWORD
        secretKeyRefKey: password
        secretKeyRefName: baremetal-operator-mariadb
      - name: RESTART_CONTAINER_CERTIFICATE_UPDATED
        configMapKeyRefKey: RESTART_CONTAINER_CERTIFICATE_UPDATED
        configMapKeyRefName: bmo   
    image:
      repository: quay.io/metal3-io/mariadb
      pullPolicy: Always
      tag: "" 
    execCommand:
      - sh
      - -c
      - mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)  
    ports:
      - containerPort: 3306
        name: mariadb
        protocol: TCP    
  - servname: ironic
    command: /bin/runironic
    envFrom:
      - configMapRefname: bmo
    env:
      - name: MARIADB_PASSWORD
        secretKeyRefKey: password
        secretKeyRefName: baremetal-operator-mariadb    
    image:
      repository: quay.io/metal3-io/ironic
      pullPolicy: Always
      tag: ""     
    execCommand:    
      - /bin/sh
      - -c
      - curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385
    ports:
      - containerPort: 6385
        name: api
        protocol: TCP
  - servname: ironic-log-watch
    command: /bin/runlogwatch.sh
    image:
      repository: quay.io/metal3-io/ironic
      pullPolicy: Always
      tag: ""
  - servname: ironic-inspector
    command: /bin/runironic-inspector
    envFrom:
      - configMapRefname: bmo
    image:
      repository: quay.io/metal3-io/ironic
      pullPolicy: Always
      tag: ""    
    execCommand:
      - sh
      - -c
      - curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050
    ports:
      - containerPort: 5050
        name: inspector
        protocol: TCP
  - servname: ironic-httpd
    command: /bin/runhttpd
    envFrom:
      - configMapRefname: bmo
    image:
      repository: quay.io/metal3-io/ironic
      pullPolicy: Always
      tag: ""     
    execCommand:  
      - /bin/sh
      - -c
      - curl -sSf http://127.0.0.1:6180/boot.ipxe || curl -sSfk https://127.0.0.1:6180/boot.ipxe
    ports:
      - containerPort: 6180
        name: httpd
        protocol: TCP      
  - servname: ironic-ipa-downloader
    command: /usr/local/bin/get-resource.sh
    type: initContainers
    envFrom:
      - configMapRefname: bmo
    image:
      repository: quay.io/metal3-io/ironic-ipa-downloader
      pullPolicy: Always  
      tag: ""
    volumeMounts:
      - mountPath: /shared
        name: ironic-data-volume  
